package hybridsystemgui;

import mit.cadlab.dome3.gui.guiutils.customGui.CustomGui;
import mit.cadlab.dome3.objectmodel.modelinterface.ModelInterfaceBase;
import mit.cadlab.dome3.swing.Templates;

import javax.swing.*;
import java.awt.*;

public class PropOutputCard extends JPanel
{
	public static final GridBagConstraints gbc = null;

    private final String dieselTitle = "Diesel generator properties";
    private final String systemLoadTitle = "System loads";
    private final String ratedPowTitle = "Minimum requirements";

    private JTextField oilCap;
    private JTextField oilChange;
    private JTextField annualOil;
    private JTextField fuelConsum;
    private JTextField dieselLifetime;
    private JTextField dieselLifetimeYr;

    private JTextField pvDailyLoad;
    private JTextField pvAnnualLoad;
    private JTextField pvElec;
    private JTextField dieselDailyLoad;
    private JTextField dieselAnnualLoad;
    private JTextField dieselElec;

    private JTextField pvPow;
    private JTextField dieselOptPow;
    private JTextField battCap;
    private JTextField dieselPow;

	public PropOutputCard()
	{
        JComponent[] comps = {makeSystemLoadPanel(), makeRatedPowPanel(), makeDieselPanel()};
        // gridx, gridy, gridwidth, gridheight, weightx, weighty, anchor, fill, insets(t,l,b,r), ipadx, ipady
        GridBagConstraints[] gbcs = {
            new GridBagConstraints(0, 0, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(0, 0, 5, 0), 0, 0),
            new GridBagConstraints(0, 1, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(0, 0, 5, 0), 0, 0),
            new GridBagConstraints(0, 2, 1, 1, 1.0, 1.0, gbc.NORTH, gbc.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0),
        };

        Templates.layoutGridBag(this, comps, gbcs);
	}

    private JPanel makeDieselPanel() {
        JPanel bigP = new JPanel();

        JLabel oilCapLabel = Templates.makeLabel("Engine oil capacity (l): ");
        oilCapLabel.setToolTipText("Engine oil capacity of engine-generator");
        oilCap = Templates.makeTextField("");

        JLabel oilChangeLabel = Templates.makeLabel("Engine oil change period (h): ");
        oilChangeLabel.setToolTipText("Amount of time of engine oil is used before it needs to be changed");
        oilChange = Templates.makeTextField("");

        JLabel annualOilLabel = Templates.makeLabel("Annual engine oil change count: ");
        annualOilLabel.setToolTipText("Number of engine oil changes per year");
        annualOil = Templates.makeTextField("");

        JLabel fuelConsumLabel = Templates.makeLabel("Fuel consumption rate (l/ kWh): ");
        fuelConsumLabel.setToolTipText("Rate of fuel consumed per unit electrical energy generated by engine-generator");
        fuelConsum = Templates.makeTextField("");

        JLabel dieselLifetimeLabel = Templates.makeLabel("Engine's operating lifetime (h): ");
        dieselLifetimeLabel.setToolTipText("Operatiing lifetime of engine-generator");
        dieselLifetime = Templates.makeTextField("");

        JLabel dieselLifetimeYrLabel = Templates.makeLabel("Engine's lifetime (y): ");
        dieselLifetimeYrLabel.setToolTipText("Lifetime in years of engine-generator");
        dieselLifetimeYr = Templates.makeTextField("");

        JComponent[] comps = {dieselLifetimeYrLabel, dieselLifetimeYr,
                              oilChangeLabel, oilChange,
                              oilCapLabel, oilCap,
                              dieselLifetimeLabel, dieselLifetime,
                              fuelConsumLabel, fuelConsum,
                              annualOilLabel, annualOil,
        };
        // gridx, gridy, gridwidth, gridheight, weightx, weighty, anchor, fill, insets(t,l,b,r), ipadx, ipady
        GridBagConstraints[] gbcs = {

            new GridBagConstraints(0, 1, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(0, 5, 0, 0), 0, 0),
            new GridBagConstraints(1, 1, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(0, 5, 0, 10), 0, 0),
            new GridBagConstraints(2, 1, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(0, 5, 0, 0), 0, 0),
            new GridBagConstraints(3, 1, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(0, 5, 0, 5), 0, 0),

            new GridBagConstraints(0, 2, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 0, 0), 0, 0),
            new GridBagConstraints(1, 2, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 0, 10), 0, 0),
            new GridBagConstraints(2, 2, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 0, 0), 0, 0),
            new GridBagConstraints(3, 2, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 0, 5), 0, 0),

            new GridBagConstraints(0, 3, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 5, 0), 0, 0),
            new GridBagConstraints(1, 3, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 5, 10), 0, 0),
            new GridBagConstraints(2, 3, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 5, 0), 0, 0),
            new GridBagConstraints(3, 3, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 5, 5), 0, 0),
        };

        Templates.layoutGridBag(bigP, comps, gbcs);
        bigP.setBorder(BorderFactory.createTitledBorder(null, dieselTitle));

        return bigP;
    }

    private JPanel makeSystemLoadPanel() {
        JPanel p = new JPanel();

        JLabel pvLabel = Templates.makeLabel("       PV array       ", Templates.FONT11B);
        JLabel dieselLabel = Templates.makeLabel("Diesel generator", Templates.FONT11B);

        JLabel pvDailyLoadLabel = Templates.makeLabel("Daily load (Wh): ");
        pvDailyLoadLabel.setToolTipText("Daily load delivered by the PV array or diesel generator");
        pvDailyLoad = Templates.makeTextField("");
        dieselDailyLoad = Templates.makeTextField("");

        JLabel pvAnnualLoadLabel = Templates.makeLabel("Annual load (kWh): ");
        pvAnnualLoadLabel.setToolTipText("Load delivered by the PV array or diesel generator in a year");
        pvAnnualLoad = Templates.makeTextField("");
        dieselAnnualLoad = Templates.makeTextField("");

        JLabel pvElecLabel = Templates.makeLabel("Total electricity (kWh): ");
        pvElecLabel.setToolTipText("Total electricity generated by the PV array or diesel generator over the entire analysis");
        pvElec = Templates.makeTextField("");
        dieselElec = Templates.makeTextField("");

        JComponent[] comps = {pvLabel, dieselLabel,
                              pvDailyLoadLabel, pvDailyLoad, dieselDailyLoad,
                              pvAnnualLoadLabel, pvAnnualLoad, dieselAnnualLoad,
                              pvElecLabel, pvElec, dieselElec,
    };
        // gridx, gridy, gridwidth, gridheight, weightx, weighty, anchor, fill, insets(t,l,b,r), ipadx, ipady
        GridBagConstraints[] gbcs = {
            new GridBagConstraints(1, 0, 1, 1, 0.0, 0.0, gbc.CENTER, gbc.NONE, new Insets(-5, 5, 0, 0), 0, 0),
            new GridBagConstraints(2, 0, 1, 1, 0.0, 0.0, gbc.CENTER, gbc.NONE, new Insets(-5, 5, 0, 5), 0, 0),

            new GridBagConstraints(0, 2, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 0, 0), 0, 0),
            new GridBagConstraints(1, 2, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 0, 0), 0, 0),
            new GridBagConstraints(2, 2, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 0, 5), 0, 0),

            new GridBagConstraints(0, 3, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 0, 0), 0, 0),
            new GridBagConstraints(1, 3, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 0, 0), 0, 0),
            new GridBagConstraints(2, 3, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 0, 5), 0, 0),

            new GridBagConstraints(0, 4, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 5, 0), 0, 0),
            new GridBagConstraints(1, 4, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 5, 0), 0, 0),
            new GridBagConstraints(2, 4, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 5, 5), 0, 0),
        };

        Templates.layoutGridBag(p, comps, gbcs);
        p.setBorder(BorderFactory.createTitledBorder(null, systemLoadTitle));

        return p;
    }

    private JPanel makeRatedPowPanel() {
        JPanel p = new JPanel();

        JLabel pvPowLabel = Templates.makeLabel("PV rated power (W): ");
        pvPowLabel.setToolTipText("Minimum required rated power of PV");
        pvPow = Templates.makeTextField("");

        JLabel dieselOptPowLabel = Templates.makeLabel("Diesel operating power (W): ");
        dieselOptPowLabel.setToolTipText("Minimum required operating power of diesel generator");
        dieselOptPow = Templates.makeTextField("");

        JLabel battCapLabel = Templates.makeLabel("Battery capacity (Wh): ");
        battCapLabel.setToolTipText("Minimum required rated capacity of battery");
        battCap = Templates.makeTextField("");

        JLabel dieselPowLabel = Templates.makeLabel("Diesel rated power (W): ");
        dieselPowLabel.setToolTipText("Minimum required rated power of diesel generator");
        dieselPow = Templates.makeTextField("");

        JComponent[] comps = {pvPowLabel, pvPow,
                              dieselPowLabel, dieselPow,
                              battCapLabel, battCap,
                              dieselOptPowLabel, dieselOptPow,
        };
        // gridx, gridy, gridwidth, gridheight, weightx, weighty, anchor, fill, insets(t,l,b,r), ipadx, ipady
        GridBagConstraints[] gbcs = {
            new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(0, 5, 0, 0), 0, 0),
            new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(0, 5, 0, 10), 0, 0),
            new GridBagConstraints(2, 0, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(0, 5, 0, 0), 0, 0),
            new GridBagConstraints(3, 0, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(0, 5, 0, 5), 0, 0),

            new GridBagConstraints(0, 1, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 5, 0), 0, 0),
            new GridBagConstraints(1, 1, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 5, 10), 0, 0),
            new GridBagConstraints(2, 1, 1, 1, 0.0, 0.0, gbc.WEST, gbc.NONE, new Insets(5, 5, 5, 0), 0, 0),
            new GridBagConstraints(3, 1, 1, 1, 1.0, 0.0, gbc.CENTER, gbc.HORIZONTAL, new Insets(5, 5, 5, 5), 0, 0),
        };

        Templates.layoutGridBag(p, comps, gbcs);
        p.setBorder(BorderFactory.createTitledBorder(null, ratedPowTitle));

        return p;
    }

    public void setInterface(ModelInterfaceBase iface) {
        CustomGui.connectStringOrNumberTextField(iface, "diesel engine oil capacity", oilCap);
        CustomGui.connectStringOrNumberTextField(iface, "diesel engine oil change period", oilChange);
        CustomGui.connectStringOrNumberTextField(iface, "diesel annual engine oil change count", annualOil);
        CustomGui.connectStringOrNumberTextField(iface, "diesel fuel consumption", fuelConsum);
        CustomGui.connectStringOrNumberTextField(iface, "diesel engine-generator lifetime", dieselLifetime);
        CustomGui.connectStringOrNumberTextField(iface, "diesel generator lifetime in years", dieselLifetimeYr);

        CustomGui.connectStringOrNumberTextField(iface, "PV daily load", pvDailyLoad);
        CustomGui.connectStringOrNumberTextField(iface, "PV annual load", pvAnnualLoad);
        CustomGui.connectStringOrNumberTextField(iface, "total PV-generated electricity", pvElec);
        CustomGui.connectStringOrNumberTextField(iface, "diesel daily load", dieselDailyLoad);
        CustomGui.connectStringOrNumberTextField(iface, "diesel annual load", dieselAnnualLoad);
        CustomGui.connectStringOrNumberTextField(iface, "total diesel-generated electricity", dieselElec);

        CustomGui.connectStringOrNumberTextField(iface, "battery rated capacity", battCap);
        CustomGui.connectStringOrNumberTextField(iface, "PV module rated power", pvPow);
        CustomGui.connectStringOrNumberTextField(iface, "minimum diesel operating power", dieselOptPow);
        CustomGui.connectStringOrNumberTextField(iface, "diesel generator rated power", dieselPow);
    }

	public static void main(String[] args)
	{
		JFrame f = new JFrame("Config card");
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.getContentPane().add(new PropOutputCard());
        f.pack();
		f.show();
	}
}
