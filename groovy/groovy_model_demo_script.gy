public class _CatalogModel__DemoModel {

	Closure currentImpl = null;
	
	/** dynamically generated by interface meta data - using default implementation info */
	public _CatalogModel__DemoModel() {
		currentImpl = { paramMap -> implement__column(paramMap); }
	}

	/** dynamically generated by interface meta data - using the list of implmentations */
	void setCurrentImpl(index) {
		if (index == 0) {
			currentImpl = { paramMap -> implement__column(paramMap); }
		} else if (index == 1) {
			currentImpl = { paramMap -> implement__corn(paramMap); }
		}
	}

	/** statically presents in all catalog models */
	public void execute(HashMap paramMap) {
		println "are you reaching here"
		currentImpl.call(paramMap);
	}

	public String[] getImplementationNames() {
		return [ "column", "corn" ];
	}
	
	public void implement__column(Map paramMap) {
		/** dynamically generated using the meta info of 'interface mapper': if parameter name is 'area', script variable name is '_ITFMAP__area'. if there are many 'area's, scripting variable name will be ${ITFMAP}.area__1, ${ITFMAP}.area__2 */
		def _ITFMAP__area = paramMap.get("_ITFMAP__area");
		def _ITFMAP__height = paramMap.get("_ITFMAP__height");
		def _ITFMAP__volume = paramMap.get("_ITFMAP__volume");
		
		_ITFMAP__volume << _ITFMAP__area * _ITFMAP__height;
	}
	
	/** dynamically generated */
	public void implement__corn(Map paramMap) {
		def _ITFMAP__area = paramMap.get("_ITFMAP__area");
		def _ITFMAP__height = paramMap.get("_ITFMAP__height");
		def _ITFMAP__volume = paramMap.get("_ITFMAP__volume");
		
		//_ITFMAP__volume << ((_ITFMAP__area * _ITFMAP__height).divide(new Double(3)));
		_ITFMAP__volume << (_ITFMAP__area * _ITFMAP__height).divide(new Double("3"));
		// _ITFMAP__volume << ((_ITFMAP__area * _ITFMAP__height) / new Double("3"));
		//_ITFMAP__volume << _ITFMAP__area * _ITFMAP__height;
	}
}

volume << area * height;

println height
println area
println volume

//def paramMap = new HashMap();
//paramMap.put("_ITFMAP__area", area);
//paramMap.put("_ITFMAP__height", height);
//paramMap.put("_ITFMAP__volume", volume);
//implement__column(paramMap);

